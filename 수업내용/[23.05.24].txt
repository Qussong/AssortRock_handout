[23/05/24]

---[질문]---
- 3중 for문 넘어가는 문제들은
	한번에 3중 for문으로 생각하면 복잡하다
	"divide and conquer" : 나누어서 해결해라

- continue 

- 반환값 void 여도 'return;' 적어줄 수 있다.
	반환되는 값만 없으면 된다.
	함수의 종결?을 표현해줌으로써 헷갈림 방지
	
---[1교시]---

[클래스]

[바이트 패딩]
구조체와 클래스 등의 메모리 사이즈를 할당해줄 때
멤버들의 종류에 따라 데이터 크기를 큰 메모리를 기준으로 증량하여 할당해준다.
CPU의 속도향상에 목적성을 가지고 있다.

[생성자]
= 멤버 이니셜라이저 (member initializer)
구주체 생성시 값을 바로 대입해주는 초기화 법은 C#에서 넘어온 생긴지 얼마되지 않은 문법이다.
생성자는 함수의 일종이다.
특징 : 
	- 반환값이 없다
	- 클래스/구제체 이름과 생성자 함수명이 동일하다.
	- 멤버들의 초기화에 목적을 가지고 있다.
	
[함수]
오버로딩(overloading) vs 오버라이딩(overwriting)
1. 오버로딩
- 함수의 이름을 동일하게 한다.
- 함수의 전달 인자를 다르게 한다.

[템플릿 함수]
= 함수 템플릿(function template)


