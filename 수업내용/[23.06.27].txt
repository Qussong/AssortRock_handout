[23/06/27]

namespace 사용이유 :
	같은 이름의 클래스를 사용하기 위해서
	
High Level Interface_filter 생성
	[ yaApplication.h ]
	- #include "CommonInclude.h"
	- namespace ya
		- using namespace math;
		- Application class
			- void Initialize(HWND hwnd)
				- GetDC() 추가
				
			- void Run()
				- Update() : 값변경
				- Render() : 변경된 값을 기반으로 다시 그려준다
				* 1프레임 : 물체를 한번 그리는데 걸리는 시간
			- void Update()
			- void Render()
			- Vector2 mPlayerPos;
			
	- #include <imgui.h>
		라이브러라 설치하고 vs에 연결하기 -> vs 재시작
	
	
Common_fileter 생성
	[ CommonInclude.h ]
	- #include <vector>
	- #include <list>
	- #include <map>
	- #include <set>
	- #include <functional> : 함수포인터
	- #include "framework.h" : main 프로젝트에서 옮겨온다.
	[ yaMath.h ]
	- ya::math namespace
		- struct Vector2 
			- 멤버 : float x, float y
			
* 속성 -> 일반 -> C++언어표준 : c++14 애서 c++20으로 변경 하면 ya::math
	이름지을 수 있다.

vector? :
	일반적으로 수는 '양(=크기)'을 표현한다. ex) 사과가 3개 있다.
	벡터는 "크기 + 방향" 을 가지고 있는 데이터이다.
	출발점(=시작점,기준점)이 달라도 방향과 길이가 같으면 같은 벡터로 본다.
	게임에선 통산적으로 기준점을 (0,0)으로 둔다.
	"기저벡터" : 기본벡터 (x,y) = (1,1)
	pdf는 글자를 벡터 데이터로 저장한다. 때문에 확대해도 깨지지 않는다. (이미지 제외)
	벡터는 점으로 표현할 수 있다. 특정한 점을 찍으면 기준점에서부터 선이 연결된다.
	
double vs float : 
	실수 타입의 두 자료형으로 double은 8Byte, float은 4Byte
	float 타입은 값 뒤에 'f'를 붙여줘야한다.

header 와 cpp :
	코드가 길어지기 때문에 header에는 선언부만 적고
	*.cpp 파일에 구현한다.

실수로 header 파일을 여러번 #include 해줘도 알아서 코드에 한번만 포함된다.

라이브러리 파일을 #include 해줄 때 컴퓨터에 기본적으로 저장되어 있는 라이브러리 파일은
 꺽쇠로 묶어주고 직접만들어줬거나 솔루션에 포함된 라이브러리 파일들은 ""으로 묶어준다.
 
main.cpp
	- #include "yaApplication.h"
	- ya::Application application; 전역변수 추가
	
ctrl + K + O : header 와 cpp 를 오가는 단축키