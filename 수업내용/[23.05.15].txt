[23/05/15]

---[질문타임]---

[자동완성]
- if문, for문 자동완성 방법 : if/for + tab
- f12를 누르면 해당 키워드의 정의로 이동한다.

[size_t]
- typedef unsigned __int64 size_t;
- typedef (= typedefine) : type을 새롭게 정의한다는 의미, 불편함을 완화 해준다.
	ex) typedef int Sample
		Sample num = 10;	// Sample == int
- unsigned : 양수전용으로 변경된다.
- __int64 : 8Byte 정수형 타입 (= long long)
- long : 4Byte 정수형 타입

[생성자]
- 구조체의 변수들을 초기화 하는 위치
	하나하나 값을 대입해주는건 좋지 않은 형태이다. (가독성저하)
	
[버퍼(buffer)]
- http://www.tcpschool.com/c/c_io_console
- 키보드 입력이 있을 때마다 한 문자씩 버퍼로 전송함
- 버퍼가 가득 차거나 개행 문자가 나타나면, 버퍼의 내용을 한번에 전송한다.

---[1교시]---

[포인터]
- 타입 = 자료형
- 포인터 타입은 메모리의 주소를 저장하고자 할때 사용한다.
- 포인터 변수 : 매모리의 주소값을 저장하는 변수 (이게 전부다 더 깊게 해봤자 머리만 아프다)
- '&' : 주소연산자
- 변수앞에 주소연산자(&)를 붙여주면 해당 변수의 주소값을 반환한다.
- 0x~~ : 16진수 표기법
- 주소값을 16진수로 표기하는건 하나의 약속이다.
- 포인터변수의 크기는 자료형과 관계없이 항상 4Byte(= 32bit 기준)
- 운영체제가 64bit이면 포인터변수는 8Byte이다.
	이는 한번에 64bit씩 데이터를 처리할 수 있음을 의미한다.


[역참조 연산]
- 포인터 변수의 특별한 기능
- '*' : 참조연산자
- 포인터변수에 *을 붙여주면 해당 포인터 변수가 가리키는 주소가 가지고 있는 값에 접근할 수 있다.

[void*]
- void형은 주소값만 저장하고자 할때 사용한다.
- 만약 참조(*)를 통해서 해당 포인터변수의 값에 접근하고자 한다면 포인터 변수가 가리키는 주소의 변수 타입과 맞춰줘야한다.
